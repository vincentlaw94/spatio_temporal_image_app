{"version":3,"sources":["actions/index.js","components/dropZone/dropzone.js","components/videoPlayer/videoPlayer.js","components/select/selectVideo.js","components/select/selectSTI.js","components/select/selectThreshold.js","components/select/STIRadio.js","components/select/IBMRadio.js","components/componentParent/componentParent.js","App.js","serviceWorker.js","reducers/videoReducer.js","reducers/selectReducer.js","reducers/radioReducer.js","reducers/index.js","index.js","components/videoPlayer/NoSignal.gif"],"names":["toggleMSG","type","setThreshold","threshold","payload","DropZone","props","handleRejection","rejectedFile","rejectedType","rejectedSize","size","includes","alert","handleOnDrop","files","rejectedFiles","length","console","log","fileName","name","videoList","addVideo","formData","FormData","append","axios","post","then","catch","err","warn","onDrop","this","accept","multiple","maxSize","getRootProps","getInputProps","className","React","Component","connect","state","newItem","VideoPlayer","url","width","height","controls","src","noSignal","style","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SelectVideo","v","useSelector","dispatch","useDispatch","classes","FormControl","Select","displayEmpty","onChange","event","URL","target","value","setURL","MenuItem","disabled","map","FormHelperText","SelectSTI","typeSTI","setSTI","Object","entries","copyPixel","histDiff","IBMdiff","key","val","root","fontSize","input","InputSlider","thresholdToggle","radio","useState","setValue","checkedB","setState","Checkbox","checked","color","Grid","container","alignItems","item","xs","level","Slider","newValue","aria-labelledby","step","min","max","Input","Number","onBlur","inputProps","STIRadio","component","RadioGroup","selectType","row","aria-label","defaultValue","col","FormControlLabel","control","Radio","label","labelPlacement","IBMRadio","rbg","chr","thresholdSTI","IBM","ComponentParent","handleClick","e","preventDefault","undefined","currentTarget","thresholdLevel","Axios","get","res","sti","handleClose","reason","vertical","horizontal","bind","Container","justify","Paper","paper","img","URLCallback","updateURLCallback","Snackbar","open","autoHideDuration","anchorOrigin","onClose","Alert","severity","Button","button","variant","onClick","mapDispatchToProps","withStyles","padding","maxWidth","selection","App","backgroundColor","position","Boolean","window","location","hostname","match","initialVideoList","videoReducer","action","initialSelectList","selectReducer","radioReducer","combineReducers","store","createStore","reducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.362b1b40.chunk.js","sourcesContent":["export const addVideo = fileName => {\n  return {\n    type: \"ADD_VIDEO\",\n    newItem: fileName\n  };\n};\n\nexport const setURL = URL => {\n  return {\n    type: \"SET_URL\",\n    payload: URL\n  };\n};\n\nexport const setFileName = fileName => {\n  return {\n    type: \"SET_FILENAME\",\n    payload: fileName\n  };\n};\n\nexport const toggleMSG = () => {\n  return {\n    type: \"TOGGLE_MSG\"\n  };\n};\n\nexport const setSTI = typeSTI => {\n  return {\n    type: \"SET_STI\",\n    payload: typeSTI\n  };\n};\n\nexport const setSTIRadio = typeRadio => {\n  return {\n    type: \"SET_STI_RADIO\",\n    payload: typeRadio\n  };\n};\nexport const setIBMRadio = typeRadio => {\n  return {\n    type: \"SET_IBM_RADIO\",\n    payload: typeRadio\n  };\n};\nexport const setThreshold = threshold => {\n  return {\n    type: \"SET_THRESHOLD\",\n    payload: threshold\n  };\n};\n\nexport const toggleThreshold = () => {\n  return {\n    type: \"TOGGLE_THRESHOLD\"\n  };\n};\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport \"./dropzone.css\";\nimport { connect } from \"react-redux\";\nimport { addVideo, toggleMSG } from \"../../actions\";\n\nconst maxVideoSize = 10000000;\nconst acceptedTypes = \"video/*\";\n\nclass DropZone extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleRejection = (rejectedFile = null) => {\n    const rejectedType = rejectedFile.type;\n    const rejectedSize = rejectedFile.size;\n\n    if (!acceptedTypes.includes(rejectedType)) {\n      alert(\"Please ensure that the file is a video\");\n    } else if (rejectedSize > maxVideoSize) {\n      alert(\"File size is too large. Maximum file size is 10mb\");\n    }\n  };\n\n  handleOnDrop = (files, rejectedFiles) => {\n    //Handle Rejections\n    if (rejectedFiles && rejectedFiles.length > 0) {\n      console.log(rejectedFiles);\n      this.handleRejection(rejectedFiles[0]);\n    }\n    //Handle Videos\n    else {\n      var fileName = files[0].name;\n\n      //update select video list\n      if (this.props.videoList.includes(fileName)) {\n        //Do nothing if there's a duplicate filenames\n      } else {\n        this.props.addVideo(fileName);\n      }\n      //post file to server\n      var formData = new FormData();\n      formData.append(\"file\", files[0]);\n      axios\n        .post(\"/upload\", formData)\n        .then(this.props.toggleMSG())\n        .catch(err => console.warn(err));\n    }\n  };\n\n  render() {\n    return (\n      <Dropzone\n        onDrop={this.handleOnDrop}\n        accept={acceptedTypes}\n        multiple={false}\n        maxSize={maxVideoSize}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <section className=\"DropZoneOuter\">\n            <div className=\"DropZoneInner\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <p>Drag 'n' drop some files here, or click to select files</p>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    );\n  }\n}\n\n//connect to redux store\nfunction mapStateToProps(state) {\n  return {\n    videoList: state.videoList.videoList\n  };\n}\n\nexport default connect(mapStateToProps, { addVideo, toggleMSG })(DropZone);\n","import React from \"react\";\nimport ReactPlayer from \"react-player\";\nimport \"./videoPlayer.css\";\nimport noSignal from \"./NoSignal.gif\";\nimport Container from \"@material-ui/core/Container\";\n\nconst VideoPlayer = ({ url }) => {\n  if (url) {\n    return (\n      <div className=\"VideoPlayerInner\">\n        <ReactPlayer\n          className=\"react-player\"\n          url={url}\n          width=\"100%\"\n          height=\"100%\"\n          controls=\"true\"\n        />\n      </div>\n    );\n  } else {\n    return <img src={noSignal} style={{ width: \"500px\", height: \"280px\" }} />;\n  }\n};\n\nexport default VideoPlayer;\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setURL, setFileName } from \"../../actions\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction SelectVideo() {\n  const v = useSelector(state => state.videoList);\n  const dispatch = useDispatch();\n  const videoList = v.videoList;\n\n  const handleChange = event => {\n    let URL = \"/get_video/\" + event.target.value;\n    dispatch(setURL(URL));\n    dispatch(setFileName(event.target.value));\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Select\n          displayEmpty\n          onChange={handleChange}\n          className={classes.selectEmpty}\n          value={v.fileName}\n        >\n          <MenuItem value=\"\" disabled>\n            Select Video\n          </MenuItem>\n          {videoList.map(fileName => {\n            return <MenuItem value={fileName}>{fileName}</MenuItem>;\n          })}\n        </Select>\n        <FormHelperText>Select Video</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default SelectVideo;\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nimport { useDispatch } from \"react-redux\";\nimport { setSTI } from \"../../actions\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction SelectSTI() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    let typeSTI = event.target.value;\n    dispatch(setSTI(typeSTI));\n  };\n\n  const transition = {\n    copyPixel: \"Copy Pixels\",\n\n    histDiff: \"Histogram Difference\",\n\n    IBMdiff: \"IBM Difference\"\n  };\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Select\n          displayEmpty\n          onChange={handleChange}\n          className={classes.selectEmpty}\n        >\n          <MenuItem value=\"\" disabled>\n            Select STI\n          </MenuItem>\n          {Object.entries(transition).map(([key, val]) => {\n            return <MenuItem value={key}>{val}</MenuItem>;\n          })}\n        </Select>\n        <FormHelperText>Select STI</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default SelectSTI;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Slider from \"@material-ui/core/Slider\";\nimport Input from \"@material-ui/core/Input\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setThreshold, toggleThreshold } from \"../../actions\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n    margin: 8,\n    fontSize: 12\n  },\n  input: {\n    width: 42\n  }\n});\n\nexport default function InputSlider() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const threshold = useSelector(state => state.radio);\n  const thresholdToggle = threshold.threshold;\n  const [value, setValue] = React.useState(255);\n\n  const [state, setState] = React.useState({\n    checkedB: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    dispatch(toggleThreshold());\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n    dispatch(setThreshold(newValue));\n  };\n\n  const handleInputChange = event => {\n    setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\n    if (event.target.value < 0) {\n      dispatch(setThreshold(0));\n    } else if (event.target.value > 255) {\n      dispatch(setThreshold(255));\n    } else {\n      dispatch(setThreshold(event.target.value));\n    }\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 255) {\n      setValue(255);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      Threshold Level\n      <Checkbox\n        checked={thresholdToggle}\n        onChange={handleChange}\n        name=\"checkedB\"\n        color=\"primary\"\n      />\n      {thresholdToggle && (\n        <Grid container spacing={1} alignItems=\"center\">\n          <Grid item xs>\n            <div className={classes.level}>\n              <Slider\n                value={typeof value === \"number\" ? value : 0}\n                onChange={handleSliderChange}\n                aria-labelledby=\"input-slider\"\n                step={1}\n                min={0}\n                max={255}\n              />\n            </div>\n          </Grid>\n          <Grid item>\n            <Input\n              className={classes.input}\n              value={value}\n              margin=\"dense\"\n              onChange={handleInputChange}\n              onBlur={handleBlur}\n              inputProps={{\n                step: 1,\n                min: 0,\n                max: 255,\n                type: \"number\",\n                \"aria-labelledby\": \"input-slider\"\n              }}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSTIRadio } from \"../../actions\";\n\nconst useStyles = makeStyles(theme => ({\n  radio: {\n    fontSize: 13\n    // In Chinese and Japanese the characters are usually larger,\n    // so a smaller fontsize may be appropriate.\n  }\n}));\n\nfunction STIRadio() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    let selectType = event.target.value;\n\n    dispatch(setSTIRadio(selectType));\n  };\n\n  const selectType = {\n    col: \"Column\",\n    row: \"Row\"\n  };\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup\n        onChange={handleChange}\n        row\n        aria-label=\"position\"\n        name=\"position\"\n        defaultValue=\"col\"\n      >\n        {Object.entries(selectType).map(([key, val]) => {\n          return (\n            <FormControlLabel\n              value={key}\n              control={<Radio color=\"primary\" />}\n              label={val}\n              labelPlacement=\"end\"\n              classes={{\n                label: classes.radio\n              }}\n            />\n          );\n        })}\n      </RadioGroup>\n    </FormControl>\n  );\n}\n\nexport default STIRadio;\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setIBMRadio } from \"../../actions\";\n\nconst useStyles = makeStyles(theme => ({\n  radio: {\n    fontSize: 13\n    // In Chinese and Japanese the characters are usually larger,\n    // so a smaller fontsize may be appropriate.\n  }\n}));\n\nfunction IBMRadio() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    let selectType = event.target.value;\n\n    dispatch(setIBMRadio(selectType));\n  };\n\n  const selectType = {\n    rbg: \"RGB\",\n    chr: \"Chromaticity\"\n  };\n  return (\n    <FormControl component=\"fieldset1\">\n      <RadioGroup\n        onChange={handleChange}\n        row\n        aria-label=\"position\"\n        name=\"s\"\n        defaultValue=\"rbg\"\n      >\n        {Object.entries(selectType).map(([key, val]) => {\n          return (\n            <FormControlLabel\n              value={key}\n              control={<Radio color=\"primary\" />}\n              label={val}\n              labelPlacement=\"end\"\n              classes={{\n                label: classes.radio\n              }}\n            />\n          );\n        })}\n      </RadioGroup>\n    </FormControl>\n  );\n}\n\nexport default IBMRadio;\n","import React from \"react\";\nimport DropZone from \"../dropZone/dropzone.js\";\nimport VideoPlayer from \"../videoPlayer/videoPlayer.js\";\nimport SelectVideo from \"../select/selectVideo.js\";\nimport SelectSTI from \"../select/selectSTI.js\";\nimport SelectThreshold from \"../select/selectThreshold.js\";\nimport STIRadio from \"../select/STIRadio.js\";\nimport IBMRadio from \"../select/IBMRadio.js\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport { toggleMSG } from \"../../actions\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    margin: 25\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500\n  },\n\n  img: {\n    margin: \"auto\"\n  },\n  button: {\n    margin: 10\n  }\n});\n\nconst thresholdSTI = [\"histDiff\", \"IBMdiff\"];\nconst IBM = [\"IBMdiff\"];\nclass ComponentParent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sti: undefined,\n      vertical: \"top\",\n      horizontal: \"left\"\n    };\n    this.handleClick.bind(this);\n    this.handleClose.bind(this);\n  }\n\n  handleClick = e => {\n    e.preventDefault();\n    if (this.props.fileName == undefined || this.props.typeSTI == undefined) {\n      alert(\"Select Video and STI First\");\n    } else {\n      const url =\n        \"/sti_feed/\" +\n        e.currentTarget.value +\n        \"/\" +\n        this.props.typeSTI +\n        \"/\" +\n        this.props.STIRadio +\n        \"/\" +\n        +this.props.thresholdToggle +\n        \"/\" +\n        this.props.thresholdLevel +\n        \"/\" +\n        this.props.IBMRadio;\n\n      Axios.get(url).then(res => console.log(res));\n      this.setState({ sti: url });\n    }\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.props.toggleMSG();\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { vertical, horizontal } = this.state;\n    return (\n      <Container className={classes.root}>\n        <Grid container spacing={2} alignItems=\"flex-start\" justify=\"center\">\n          <Grid item>\n            <Paper className={classes.paper}>\n              <VideoPlayer url={this.props.URL} />\n              <img className={classes.img} src={this.state.sti} />\n            </Paper>\n          </Grid>\n\n          <Grid item>\n            <Paper className={classes.paper}>\n              <SelectVideo />\n              <SelectSTI />\n              {thresholdSTI.includes(this.props.typeSTI) && <SelectThreshold />}\n              {IBM.includes(this.props.typeSTI) && <IBMRadio />}\n              <STIRadio />\n              <DropZone URLCallback={this.updateURLCallback} />\n              {/* notification message for uploading videos. */}\n              <Snackbar\n                open={this.props.open}\n                autoHideDuration={2000}\n                anchorOrigin={{ vertical, horizontal }}\n                onClose={this.handleClose}\n              >\n                <Alert onClose={this.handleClose} severity=\"success\">\n                  Successfully Uploaded Video\n                </Alert>\n              </Snackbar>\n            </Paper>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleClick}\n              value={this.props.fileName}\n            >\n              GENERATE STI\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n//connect to redux store\nfunction mapStateToProps(state) {\n  return {\n    URL: state.videoList.URL,\n    fileName: state.videoList.fileName,\n    open: state.videoList.toggleMSG,\n    typeSTI: state.selection.typeSTI,\n    STIRadio: state.radio.STIRadio,\n    thresholdLevel: state.selection.threshold,\n    IBMRadio: state.radio.IBMRadio,\n    thresholdToggle: state.radio.threshold\n  };\n}\nconst mapDispatchToProps = {\n  toggleMSG\n};\n\nexport default withStyles(styles)(\n  connect(mapStateToProps, mapDispatchToProps)(ComponentParent)\n);\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport ComponentParent from \"./components/componentParent/componentParent.js\";\n\nfunction App() {\n  return (\n    <div\n      style={{\n        backgroundColor: \"#f5f5f5\",\n        width: \"100%\",\n        height: \"100%\",\n        position: \"fixed\"\n      }}\n    >\n      <ComponentParent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","const initialVideoList = {\n  videoList: [],\n  URL: undefined,\n  fileName: undefined,\n  toggleMSG: false\n};\nconst videoReducer = (state = initialVideoList, action) => {\n  switch (action.type) {\n    case \"ADD_VIDEO\":\n      return { ...state, videoList: [...state.videoList, action.newItem] };\n    case \"SET_URL\":\n      return { ...state, URL: action.payload };\n    case \"SET_FILENAME\":\n      return { ...state, fileName: action.payload };\n    case \"TOGGLE_MSG\":\n      return { ...state, toggleMSG: !state.toggleMSG };\n    default:\n      return state;\n  }\n};\n\nexport default videoReducer;\n","const initialSelectList = {\n  typeSTI: undefined,\n  threshold: 255\n};\n\nconst selectReducer = (state = initialSelectList, action) => {\n  switch (action.type) {\n    case \"SET_STI\":\n      return { ...state, typeSTI: action.payload };\n    case \"SET_THRESHOLD\":\n      return { ...state, threshold: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default selectReducer;\n","const initialSelectList = {\n  STIRadio: \"col\",\n  IBMRadio: \"rbg\",\n  threshold: true\n};\n\nconst radioReducer = (state = initialSelectList, action) => {\n  switch (action.type) {\n    case \"SET_STI_RADIO\":\n      return { ...state, STIRadio: action.payload };\n    case \"SET_IBM_RADIO\":\n      return { ...state, IBMRadio: action.payload };\n    case \"TOGGLE_THRESHOLD\":\n      return { ...state, threshold: !state.threshold };\n    default:\n      return state;\n  }\n};\n\nexport default radioReducer;\n","import videoReducer from \"./videoReducer\";\nimport selectReducer from \"./selectReducer\";\nimport radioReducer from \"./radioReducer\";\nimport { combineReducers } from \"redux\";\n\nexport default combineReducers({\n  videoList: videoReducer,\n  selection: selectReducer,\n  radio: radioReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore} from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers  from './reducers'\n\nconst store = createStore(reducers)\n\nReactDOM.render(\n    <Provider store ={store}><App /></Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/NoSignal.9aa58b1d.gif\";"],"sourceRoot":""}